Requirements:

	-> Compile & Execute
	-> Must be written in C++
	-> Main file initializes code
		-> game code run from header files
		-> ship/player code stored in header file
		-> Player AND AI share same class
	-> Must be able to take input from the terminal
	-> Coordinates must line with ship
	-> Must be able to check valid input
	-> Must be able track ships left and if a ship is destroyed or alive
	-> 


-- PLAYER CLASS --
	-> Must be able to store data members and retrieve


== Functional Requirements ==
What the function needs to be able to do
(i.e Something we could implement in a single function)

Running
	-> Setup up game
		-> Prompt name
		-> Ask for opponent type (AI/Human)
	-> Game starts into a while loop after setup
		-> Calls game function from seperate header file
			-> Initialize board function
				-> Let player set ships or randomize placement
					-> Error Checking: Overlaping ships or invalid placement
					-> Confirm setup
				-> If AI
					-> Random or predefined ship placement
			->
			-> After game is complete, function returns a flag
				-> Shows stats for game and enemy board
				-> Prompts player to play again

Valid Input Checking
	-> Take input from console (cin)
	-> Compare input to board
	-> Return flag if valid
	-> Mark board with a flag or value

Computer Opponent (AI)
	-> Fire valid shots
		-> Mark which shots ahve already been completed
	-> Must be able to track human ships
		-> If enemy ship is hit, run algorithm to check other spaces until completed

Header files
	-> Require header files for game code, character class, ship class

Classes
	Player and enemy must be derived from same class
		-> Default constructors
		-> Data members
			-> int
				-> number of ships
			-> bool
				-> npc flag
				-> death flag
		-> Class must be able to retrieve data members
		-> Class must be able to change data members


== Nonfunctional Requirements ==
Must be able to compile and execute
Must be written in C++
Must follow rules of Battleship
	-> Players rotate turns
		-> Only allowed to make one move each turn

